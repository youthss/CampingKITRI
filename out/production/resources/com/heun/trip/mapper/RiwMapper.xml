<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.heun.trip.dao.RiwDao">
  
  <resultMap type="riw" id="riwMap">
    <id column="riw_id" property="no"/>
    <result column="usr_id" property="userNo"/>
    <result column="riw_conts" property="contents"/>
    <result column="grd" property="grd"/>
    <result column="cdt" property="createdDate"/>
    <result column="riw_reply" property="reply"/>
    <result column="reply_dt" property="replyDate"/>
    <result column="rms_id" property="roomNo"/>
    <result column="rm_name" property="roomName"/>
    <result column="name" property="name"/>
    <result column="usr_photo" property="userPhoto"/>
    <result column="hostname" property="hostname"/>
    <result column="hostphoto" property="hostphoto"/>
    <result column="thum" property="roomPhoto"/>
  </resultMap>
  
  <select id="findroomreview" resultMap="riwMap" parameterType="map">
     select
     r.riw_id,
     r.usr_id,
     r.riw_conts,
     r.grd,
     r.cdt,
     r.riw_reply,
     r.reply_dt,
     r.rms_id,
     u.name,
     u.usr_photo,
     (select name from usr where usr_id=(select usr_id from rms where rms_id=#{no})) hostname,
     (select usr_photo from usr where usr_id=(select usr_id from rms where rms_id=#{no})) hostphoto
   from
     riw r
   left outer join usr u
     on r.usr_id=u.usr_id
   where
     r.rms_id=#{no}
   order by 
     cdt desc 
    <if test="size != null and rowNo != null">
      limit #{rowNo}, #{size}
    </if>
  </select>
  
  <select id="findAll" resultMap="riwMap" parameterType="map">
    select
      riw_id,
      r.usr_id,
      riw_conts,
      grd,
      r.cdt,
      riw_reply,
      reply_dt,
      rms_id,
      u.name,
      u.usr_photo
    from
      riw r
    left outer join
      usr u on r.usr_id=u.usr_id
    order by 
      cdt desc
    <if test="size != null and rowNo != null">
      limit #{rowNo}, #{size}
    </if>
  </select>
  
  <select id="findAllMypage" resultMap="riwMap" parameterType="map">
    select
      r.riw_id,
      r.usr_id,
      r.riw_conts,
      r.grd,
      r.cdt,
      r.riw_reply,
      r.reply_dt,
      m.rms_id,
      m.rm_name,
      m.thum,
      s.name,
      s.usr_photo,
      u.name as hostname,
      u.usr_photo as hostphoto
    from
      riw r
    left outer join
      usr s on r.usr_id = s.usr_id
    left outer join
      rms m on r.rms_id=m.rms_id
    left outer join
      usr u on m.usr_id = u.usr_id 
    where
      r.usr_id = #{userNo}
    order by 
      cdt desc
    <if test="size != null and rowNo != null">
      limit #{rowNo}, #{size}
    </if>
  </select>

  <select id="findAllhostMypage" resultMap="riwMap" parameterType="map">
    select
      r.riw_id,
      r.usr_id,
      r.riw_conts,
      r.grd,
      r.cdt,
      r.riw_reply,
      r.reply_dt,
      m.rms_id,
      m.rm_name,
      m.thum,
      u.name
    from
      riw r
    left outer join
      rms m on r.rms_id=m.rms_id
      left outer join 
     usr u on u.usr_id=r.usr_id
    where
      m.usr_id = #{userNo}
    order by 
      cdt desc
    <if test="size != null and rowNo != null">
      limit #{rowNo}, #{size}
    </if>
  </select>

  <insert id="insert" parameterType="riw">
    insert into riw(
      usr_id,
      rms_id,
      riw_conts,
      grd,
      riw_reply,
      reply_dt)
    values(
      #{userNo},
      #{roomNo},
      #{contents},
      #{grd},
      #{reply},
      #{replyDate})
  </insert>
 
  <insert id="riwinsert" parameterType="riw">
    insert into riw(
      usr_id,
      rms_id,
      riw_conts,
      grd,
      riw_reply,
      reply_dt)
    values(
      #{userNo},
      #{roomNo},
      #{contents},
      #{grd},
      #{reply},
      #{replyDate})
  </insert>
 
  <select id="findByNo" resultMap="riwMap" parameterType="int">
    select
      riw_id,
      r.usr_id,
      riw_conts,
      grd,
      r.cdt,
      riw_reply,
      reply_dt,
      rms_id,
      u.name,
      u.usr_photo
    from
      riw r
    left outer join
      usr u on r.usr_id=u.usr_id
    where
      r.riw_id=#{value}
  </select>
  
  <delete id="delete" parameterType="int">
    delete 
      from riw 
    where 
      riw_id = #{no} 
  </delete>
  
  
  
   <update id="replydelete" parameterType="int">
    update
      riw
    set
      riw_reply = null,
      reply_dt = null
    where 
      riw_id = #{no}
  </update>
  
  
     <update id="update" parameterType="riw">
    update
      riw
    set
      grd = #{grd},
      riw_conts = #{contents} 
    where 
      riw_id = #{no}
  </update>
  
  <update id="replyupdate" parameterType="riw">
    update
      riw
    set
      riw_reply = #{reply},
      reply_dt = #{replyDate} 
    where 
      riw_id = #{no}
  </update>
  
  <select id="count" parameterType="map" >
    select 
     count(*) 
    from 
     riw 
    where 
     usr_id=#{userNo} and rms_id=#{roomNo}
  </select>
  
  <select id="roomreviewcount" resultType="int" parameterType="int">
    select count(*) from riw 
    where rms_id = #{value}
  </select>
  
  <select id="countAll" resultType="int">
    select count(*) from riw
  </select>
  
  <select id="countReview" resultType="int" parameterType="int">
    select count(*) from riw where usr_id=#{no}
  </select>
  
  <select id="countAllHost" resultType="int" parameterType="int">
    select count(riw_id) from riw where rms_id IN (select rms_id from rms where usr_id=#{no})
  </select>
  
  <select id="sumroomgrd" parameterType="int" resultType="int">
    select 
     sum(grd) 
    from 
     riw 
    where 
     rms_id=#{roomNo}
  </select>
  
  <select id="grdpeople" parameterType="riw" resultType="int">
    select 
     count(grd) 
    from 
     riw 
    where 
     rms_id=#{roomNo}
  </select>
</mapper>










